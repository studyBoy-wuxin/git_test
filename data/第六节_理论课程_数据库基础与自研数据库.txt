数据库基础与自研数据库蔡珩朱蕴伽马瑞峰樊宇虹陈志鹏秦滔2!"a1数据库综述2数据库使用3数据库设计目录CONTENTS世界触手可及5实践案例介绍4自研分布式数据库3!"a!"#$%&'()!*#$%&'$+!,#$-.%&'4#$%&'(a数据库：存放数据(DB,database)数据定义数据操作数据控制数据安全数据一致性数据备份/恢复5&'()*+a1960s网状数据库层次数据库1970s关系型数据库ER模型Oracle1980sSQL面向对象数据库SQLServer1990s分布式数据库开源数据库2000sNoSQL2010sNewSQL2020s云数据库自治数据库6&'(,-a原子性（atomicity，或称不可分割性）、一致性（consistency）、隔离性（isolation，又称独立性）、持久性（durability）事务处理ACID•OLTP（On-LineTransactionProcessing），联机事务处理•OLAP（On-LineAnalyticalProcessing），联机分析处理OLTP和OLAPOracle、DB

2、SQLServer、Mysql、Postgresql）代表数据库7!"a!"#$%&'()!*#$%&'$+!,#$-.%&'8&'(./a关系型数据库非关系型数据库NoSQLNewSQL9012&'(a关系型数据库，是指采用了关系模型来组织数据的数据库，以行何列的形式存储数据。关系型数据库这一系列的行何列被称为表，一组表组成了数据库。存储结构化关系型数据库存储规范化SQL数据一致性ACID常见的关系型数据库：Oracle、Mysql、SQLServer、DB

2、Postgresql等关系型数据库适用场景：需要对数据做复杂处理的业务;对安全性能要求高的业务;数据格式单一的业务;需要满足事务一致性的业务场景。10012&'(3456789aoracle数据库是甲骨文公司开发的一款关系型数据库管理系统，在数据库领域一致处于领先地位，是目前世界上使用最为广泛的数据库管理系统。Oracle的特点：•可移植性好，使用方便，功能强大，在各类大、中、小微机环境中都适用•有完整的数据管理功能：数据的大量性、持久性、共享性、可靠性•安全性高：获得过最高认证级别地ISO标准认证•能够很好地支持存储过程、定时任务、触发器、函数等•客户端支持及应用模式：多层次网络计算，支持多种工业标准，支持ODBC、JDBC、OCI等客户端连接•能够轻松实现数据仓库的操作Oracle的缺点：a.收费的商业化软件，非常贵b.对硬件的要求高c.管理维护比较麻烦d.操作比较复杂11012&'(3:;<=8amysql是现下最流行的关系型数据库之一，功能强大，灵活性高，有丰富的API接口。Mysql的特点•开源软件，成本低•体积小、速度快、灵活性高：mysql的核心程序采用完全的多线程编程。可以灵活地为用户提供服务，充分利用主机资源•高度非过程化：在Mysql数据库系统中，能够按使用者的需求来进行自动地运行，简化操作方式，不需要对用户存取地路径进行掌控，用户在使用时更方便。•支持各种编程语言•具备扩展性•支持分布式Mysql的缺点：•对存储过程和触发器不太友好：如果使用大量存储过程，那么使用这些存储过程地每个连接地内存使用量会大量增加。如果存储过程中有大量逻辑层操作，会导致CPU利用率增加。而且mysql不允许调试存储过程，开发和维护存储过程都比较困难。•不支持自定义数据类型•不支持热备，需要额外地工具12>4?@A&'(aNoSQL数据库即非关系型数据库，NotOnlySql，指非关系型的、分布式的、不保证遵循ACID原则的数据存储系统。与关系型数据库相比，非关系型数据库无需事先为要存储的数据建立字段，它没有固定结构，既可以有不同的字段，也可以存储各种格式的数据。一般具有可扩展性、弱一致性等特点易扩展No'SQL大数据量高性能高可用灵活性13>4?@A&'(a14>4?@ABC9;3D68E9&'(aKey-value数据库是一种以键值对存储数据的数据库，类似java中的map。可以将整个数据库理解为一个大的map，每个键都会对应一个唯一值。不同于关系型数据库，Key-value并不清楚存储数据的值，也没有像mysql那样的schema概念，这意味着不能通过适用带where的SQL语句来过滤查询所存数据的部分内容。如果不知道具体key值，要过滤所有的key，才能找到对于的value。因此只有在key已知的情况下才能保证高性能。Redis就是一个典型的key-value数据库，它支持的存储类型相对比较多，包括string(字符串)、list(链表)、set(集合)和zset(有序集合)。Redis是一种内存数据库，它把数据存储在内存中，因此能提供高性能读写15>4?@ABF&'(a像oracle、mysql等数据库都是采用行存储方式。列数据库，顾名思义，就是按列为基础逻辑存储单元进行存储的数据库系统，一列中的数据在存储介质中以连续存储形式存在。这样做的好处是可以大量降低系统的I/O，适用于分布式文件系统，列数据库旨在利用低成本硬件的分布式群集进行横向扩展，进而提高吞吐量，从而使其适用于数据仓库和大数据处理。比较具有代表性的是hbase，hbase的特点：支持水平扩展、面向列、高性能随机读写、支持范围查询、和Hadoop无缝集成。16>4?@ABG&'(a图数据库就是一种使用图结构进行存储和查询的数据库，图是由节点和边两个元素组成的，每个节点代表一个实体，例如人，地，事物，类别等，每条边代表两个节点的关系，其中节点和边用于对数据进行表示和存储。适用场景，比如：社交领域、零售领域、金融领域、汽车制造领域、电信领域、酒店领域name:小强name:小美name:小帅StudentStudentStudent弟弟哥哥喜欢喜欢喜欢17>4?@ABHI&'(a时序数据是随时间不断产生的一系列数据，简单来说就是带时间戳的数据。时序数据库就是存放时序数据的数据存储系统。时序数据一般都存在时效性，数据量巨大而且生产速度快，使用者一般更关注数据变化趋势，而非数据本身。常见的时序数据：监控日志：机器CPU、内存负载变化用户行为：用户在电商网站上的访问记录金融行情：股票的日内成交记录18>4?@ABJK&'(a文档数据库，也称为面向文档的数据库或文档存储，文档存储一般用类似json的格式存储，存储的内容是文档型的，一个文档就是数据库中的一条记录。典型的文档数据库Mongodb。是一个高可用、分布式、灵活模式的文档数据库，用于大容量数据存储。逻辑结构对比MongoDB关系型数据库文档(document)行(row)集合(collection)表(table)数据库(database)数据库(database)19>9L?@A&'(aNewSQL吸收了OldSQL和NoSQL各自的优点。它的一个核心特点是，仍然采用关系数据模型，因此拥有强一致性和事务一致性，也支持SQL查询。另外它也借鉴了NoSQL的架构，有很好的水平扩展性，支持海量数据存储。非常好的水平可扩展性Ne'w'SQL强一致性事务一致性支持海量数据存储支持SQL查询20>9L?@A&'(a21>9L?@A&'(3MNOPal一款定位于在线事务处理/在线分析处理（HTAP:HybridTransactional/AnalyticalProcessing）的融合型数据库产品。l实现了一键水平伸缩，强一致性的多副本数据安全，分布式事务。l同时支持OLAP和OLTP。l同时兼容MySQL协议和生态，迁移便捷，运维成本极低。TiDB是一种典型的NewSQL数据库22!"a!"#$%&'()!*#$%&'$+!,#$-.%&'23QR&'(a24M989STUVauTELEDB最核心的模块是：数据库节点（Set）、Zookeeper组件、Agent组件、Keeper（Scheduler）组件。u数据库节点（Set）—由多个MySQL

5.7数据库组成，一个数据库节点组（Set）包括：一个主节点（Master）、若干备节点（Slave_n）uZookeeper组件—组成zookeeper集群，集群用于存储TELEDB的关键配置信息，当配置信息有变动或修改时，第一时间发送变动或修改至数据库各个节点uAgent—部署在底层DB数据库服务器上，负责向zookeeper上报底层数据库的状态（是否可读写，主从复制延迟等信息），在容灾切换过程中配合Keeper完成整个切换过程uKeeper（Scheduler）组件—提供配置、发布、监控、运维一体化功能25WOXAUVauLVS—LVS+zookeeper实现负载均衡、可设置权重实现灰度发布—keepalived+VIP消除单点故障uDBProxy（数据库中间件代理）—UDAL的核心组件，实现了mysql协议的数据库代理—提供分库分表、读写分离、数据汇聚功能，并对应用层屏蔽分库分表带来的访问难题uGiServer（切片索引）—分析binlog日志，将非分片键与分片键的映射关系存储到分布式缓存—提升非分片键查询（select语句）时的效率（避免广播查询）uctg-udal-admin（管理平台）—操作、配置zookeeper集群中配置数据的接口服务命令集，同时Keeper监控整个集群状态，控制容灾切换流程uMigration（数据迁移）—提供在线扩容、数据迁移功能26Y989Z[UVauVIP—虚拟IP地址。用于提供统一的对外访问入口。解决主备切换后，IP地址变化的问题。外部的客户端通过VIP访问gateway的端口数据库uGateway集群u—跟VIP配合使用，屏蔽主备切换后，IP地址变化的问题。可以有多个实例组成高可用集群uZookeeper—用于保存gateway集群的配置和状态u管理平台—提供配置、发布、监控、运维一体化功能u采集程序—用于从PG节点上收集监控信息，并放到监控数据库上27Y989\Y6ZUVa28MNOPUValPDServer：--是整个集群的管理者，主要存储元数据，进行负载均衡（把连接分配到不同的TiDBServer），分配全局唯一的事务ID。lTiDBServer：--负责接收SQL请求，通过PD中存储的元数据找到数据存在哪个TiKV上，并与TiKV进行交互，将结果返回给用户。lTiKVServer：--负责真正存储数据，本质上是一个KV存储引擎。lSparkDriver：--用来解决用户的复杂OLAP查询需求lTiDBOperator--方便云上部署的组件TiDB集群主要包括三个核心组件：TiDBServer，PDServer，TiKVServer29QR&'(]^_`aba数据库CPU内存硬盘类型teledb+udal2核+4G+SSDtelepg2核+4G+SSDTelehtap16核+32G+SSD30QR&'(cde&'(fga指标项udal+teledbtelepgtelehtaporacle容量整库支持容量容量>=100TB容量<=4TB容量100TB左右容量>=100TB推荐单表数据量单表<=5000万大表支持分区表支持海量数据行大表支持分区表表结构宽表支持推荐<=50,行长小于65535支持text字段，最大65535字节字段最大长度65535字节支持LOB字段，最大长度4G表数据属性预定义，结构化数据预定义，结构化数据预定义，结构化数据预定义，结构化数据非结构化数据类型支持不支持json支持json,xml,array,gis支持json支持json,xml,空间，几何事务事务支持支持分布式事务支持，非分布式支持分布式事务支持分布式事务业务场景偏向OLTP，高tps,qps混合混合混合实时性低延时低延时低延时低延时分片方式指定分片键/自动分片，不需指定分片键/扩展性是否可扩展是/是是动态扩展性扩展需停业务/是/隔离性底层物理支持支持支持（维护复杂）支持业务改造改造要求很高中高/视图不支持支持支持支持存储过程触发器不支持支持不支持支持SQL质量要求很高中高中关联查询限制需要相同的分片键无支持无其他flashback不支持不支持支持支持31QR&'(cde&'(hijikla数据库应用特性Teledb+udalCRM、计费等高并发、低延时、海量数据，不需要使用存储过程等，主要是OLTP业务telepg多媒体门户、ITSM、移动优维建等轻量级数据库、需要用到存储过程、关联查询等Telehtap资源能力中心等原Oracle的资产报文，这块数据比较契合存储在telehtap内oracleCRM、OSS、MSS等商业软件，改造前老系统全部使用oracle32a2数据库使用1数据库综述3数据库设计目录CONTENTS世界触手可及5实践案例介绍4自研分布式数据库33a!"#$%&'()/0!*#$%&'12#3!,#$456789:;<=

第四部分SQL语言介绍l是在计算机系统中引入数据库后的系统构成l在不引起混淆的情况下常常把数据库系统简称为数据库数据库系统（DatabaseSystem，简称DBS）0103是长期存储在计算机内、有组织的、可共享的大量数据的集合数据库（Database，简称DB）04SQL（StructuredQueryLanguage，结构化查询语言），用于存取数据以及查询、更新和管理关系数据库系统。SQL语言l位于用户应用与操作系统之间的一层数据管理软件l是基础软件，是一个大型复杂的软件系统数据库管理系统（DBMS）0234基础概念回顾数据库系统结构框图35用户2用户1用户3应用系统应用开发工具/语言数据库管理系统操作系统数据库数据库管理员可见数据库管理员的工作非常重要，既要管理数据库管理系统，又要对数据库进行维护传统数据库工作流程36服务器内存单进程多线程客户机A客户机B数据库服务软件

1.操作系统用户启动数据库服务数据库配置文件

2.加载配置文件到服务器内存实例Instance

3.生成数据库实例

4.派生出多个线程

5.客户机A与数据库实例建立通信链路，请求/响应期间称为会话

6.客户机A的请求

7.服务器的响应客户机B的请求服务器的响应服务器37a!"#$%&'()/0!*#$%&'12#3!,#$456789:;<=

第四部分SQL语言介绍传统数据库和RDS部署对比138传统数据库部署方案RDS数据库部署第一步：登录天翼云账号；打开https://www.ctyun.cn/天翼云平台输入账号密码后点击登录第二步：选择顶部菜单栏“控制中心“，切换对应资源池，选择并点击”弹性云主机”。第一步：登录天翼云账号；打开https://www.ctyun.cn/天翼云平台输入账号密码后点击登录第二步：选择顶部菜单栏“控制中心“，切换对应资源池，选择并点击”关系型数据库MySQL”。关系型数据库（RelationalDatabaseService，简称RDS）：是一种基于云计算平台的即开即用、稳定可靠、弹性伸缩、便捷管理的在线关系型数据库服务。传统数据库和RDS部署对比239传统数据库部署方案RDS数据库部署第三步：单击“创建弹性云主机”，系统进入创建页。第四步：按照购买选项依次选择计费模式、当前区域、设置“弹性云主机名称”和主机名称、选择“规格”、选择“镜像”、设置网络、设置“登录方式”、设置购买量等，选择完成确认无误后勾选并接受服务协议，最后点击“下一步”进行购买流程即可。第三步：点击“创建数据库实例”第四步：按照购买选项依次选择计费模式、数据库类型、数据库版本、实例类型、实例规格，数据存储空间、备份、网络、数据库配置、购买量等，选择完成确认无误后勾选并接受服务协议，最后点击“下一步”进行购买流程即可。传统数据库和RDS部署对比340传统数据库部署方案RDS数据库部署第五步：等待云主机创建成功，绑定公网IP第六步：使用SSH登录云主机，通过命令对系统进行更新，命令如下：#yummakecache#yumupdate等待系统更新完毕第七步：安装mariadb程序，命令如下：#yuminstallmariadbmariadb-servermariadb#rpm-qa|grepmariadbmariadb-server-

5.

5.68-

1.el

7.x86_64mariadb-libs-

5.

5.68-

1.el

7.x86_64mariadb-

5.

5.68-

1.el

7.x86_64第五步：等待云数据库创建成功，绑定公网IP第六步：在Web页面创建数据库第七步：创建管理账号传统数据库和RDS部署对比441传统数据库部署方案RDS数据库部署第八步：启动数据库服务，并设置为开机启动#systemctlenablemariadb#systemctlstartmariadb#systemctlstatusmariadb#ps-ef|grepmysqld#netstat-nap|grep3306#mysql-uroot-p>SHOWdatabases;第九步：打开防火墙3306端口#firewall-cmd--zone=public--query-port=3306/tcpno#firewall-cmd--zone=public--add-port=3306/tcp--permanent#firewall-cmd--reload#firewall-cmd--zone=public--query-port=3306/tcpyes或者直接关闭firewalld服务#systemctlstopfirewalld第八步：在Web页面对数据库参数进行修改第九步：在Web页面查看log日志传统数据库和RDS部署对比542传统数据库部署方案RDS数据库部署第十步：数据库备份和恢复步骤1：准备工作方法一：停止MySQL服务（冷备）方法二：使用命令"flushtableswithreadlock;"(加锁)将服务器内存中的数据"刷新"到数据库文件中，同时锁定所有表，以保证备份期间不会有新的数据写入步骤2:备份文件的选取如果数据库中全部是MyISAM存储引擎的表，最为简单的数据库备份方法就是直接"备份"整个数据库目录如果某个数据库中还存在InnoDB存储引擎的表，此时不仅需要"备份"整个数据库目录，还需要备份ibdata1表空间文件以及重做日志文件ib_logfile0与ib_logfile1（在数据库文件的上一级目录）。数据库备份时，建议将MySQL配置文件（例如my.ini配置文件）一并进行备份。步骤3：>unlocktables;解锁数据库的表第十步：数据库备份：在“备份恢复”页签，单击“查看备份策略”。如需修改自动备份策略，在弹出的对话框中单击“修改”。按要求修改相关的备份参数后，点击“确定”。传统数据库创建数据库43登录数据库#mysql-uroot-p-hx.x.x.x-P3306Enterpassword:

(1)查看数据库SHOWDATABASES

(2)创建数据库CREATEDATABASE数据库名

(3)删除数据库DROPDATABASE数据库名

(4)切换默认数据库USEdb_name;

(5)查看数据库详细信息SHOWCREATEDATABASE数据库名;传统数据库创建用户44使用命令行工具mysql管理数据库：#mysql-uroot-p-h目标主机-P端口号查看登录信息命令：>\s创建数据库用户test并授权管理employees表：GRANTALLONemployees.*TOtest@'%'IDENTIFIEDBY'test'；SELECTuser，hostfromuser；MySQL的用户名格式（用户@位置）：test@

172.

31.0.80；test@'%'%代表任意位置；test@example.com代表允许从example.com的域登录；传统数据库配置字符编码

451、字符集：MySQL使用的字符集可以细化到每个数据库，每张表，每一列，如果创建数据库时不指定，会使用系统当前设置的字符集

2、数据库管理账号root的密码：

5.5-

5.7版本的mysql，默认的root用户是没有密码的，依赖系统的鉴权系统，

5.7之后的mysql，安装时会设置一个root用户的初始密码，该密码记录在日志文件中。

3、mysql配置文件my.ini（Windows下）my.cnf（Linux下）

4、查看mysql使用的字符集使用mysql客户端登录后，输入命令：SHOWvariablesLIKE'character%';

5、修改服务器字符编码的方法：编辑/etc/my.cnf.d/server.cnf在[mysqld]下添加一行：[mysqld]character-set-server=utf8然后重启mysql服务：systemctlrestartmariadb数据库备份46备份的分类：从物理与逻辑的角度，备份可分为l物理备份:对数据库操作系统的物理文件(如数据文件、日志文件等)的备份，物理备份方法:–冷备份(脱机备份):是在关闭数据库的时候进行的–热备份(联机备份):数据库处于运行状态，依赖于数据库的日志文件–温备份:数据库锁定表格(不可写入但可读)的状态下进行备份操作l逻辑备份:对数据库逻辑组件(如:表等数据库对象)的备份从数据库的备份策略角度，备份可分为–完全备份:每次对数据库进行完整的备份–差异备份:备份自从上次完全备份之后被修改过的文件–增量备份:只有在上次完全备份或者增量备份后被修改的文件才会被备份备份的主要目的是灾难恢复，还可以用来测试应用、回滚数据修改、查询历史数据、审计等；在生产环境中，数据的安全性至关重要数据库内容备份命令

471、备份数据库表结构及数据导出的脚本中，只包含表结构和表中数据，不包含创建数据库语句，即不包含：DROPDATABASEIFEXISTSmysql;CREATEDATABASEIFNOTEXISTSmysql;#mysqldump-uroot-p--lock-all-tablesmysql>mysql_backup.sql

2、备份一张表#mysqldump-uroot-p--lock-all-tablesmysqluser>mysql_user_backup.sql

3、备份多张表，如user、db#mysqldump-uroot-p--lock-all-tablesmysqluserdb>mysql_multi_backup.sql

4、备份整个数据库，包含创建数据库脚本#mysqldump-uroot-p--lock-all-tables-Bmysql>mysql_all_backup.sql通过指定参数：-B，备份整个数据。

5、备份所有数据库#mysqldump-uroot-p--lock-all-tables--all-database>all_backup.sql

6、只备份表结构，不包含数据#mysqldump-uroot-p-dmysql>mysql_desc_backup.sql通过指定参数：-d

7、只备份数据，不包含表结构#mysqldump-uroot-p-tmysql>mysql_data_backup.sql通过指定参数：-tMySQL日志48MySQL的日志主要分为六类：

（1）错误日志log_error：记录MySQL服务的启动、运行或停止MySQL服务时出现的问题

（2）查询日志general_log：记录简历的客户端连接和执行的语句

（3）慢查询日志slow_query_log：记录所有执行时间超过long_query_time的所有查询或不使用索引的查询

（4）二进制日志binlog：记录所有更改数据的语句，可以用于数据复制

（5）事务日志innodb_log：用来记录数据库更新情况的文件，它可以记录针对数据库的任何操作，并将记录的结果保存到独立的文件中

（6）中继日志relay_log：复制中使用查看日志配置命令：SHOWvariablesLIKE'%log%';MySQL存储引擎49MySQL可以针对每个数据库设置使用不同的存储引擎，如果创建数据库时不做设置，默认使用的存储引擎（MyISAM<-

5.5之前和InnoDB<-

5.6之后）MyISAM具有检查和修复表的大多数工具，可以被压缩，最早支持全文索引,适合于经常查询，不支持事务，不支持外键InnoDB支持事务，适合于经常增删改操作，InnoDB支持外键，支持检索，适用于OLTP引擎是插件式的，存储引擎是基于表的，同一个数据库，不同的表可以用使用不同的引擎数据引擎修改方法：查看数据库服务支持的引擎情况SHOWengines;SETdefault_storage_engine=InnoDB;#临时USEtest;CREATETABLEdemo(idint)engine=MyISAM;#临时SHOWCREATETABLEdemo;CREATETABLEdemo2(idint);SHOWCREATETABLEdemo2;修改/etc/my.cnf在[mysqld]下添加：default-storage-engine=myisam#永久更改默认使用的存储引擎SHOWvariableslike'%data%';50性能项目云数据库RDS自购服务器搭建数据库服务服务可用性请参见《弹性云服务器用户指南》。需要购买额外设备，自建主从，自建RAID。数据可靠性高达

99.9999999%的数据持久性；块存储采用三副本技术；需要购买额外设备，自建主从，自建RAID。系统安全性防DDoS攻击，流量清洗；及时修复各种数据库安全漏洞。需要购买昂贵的硬件设备和软件服务，需要自行检测和修复安全漏洞等。数据库备份支持自动备份，手动备份，自定义备份存储周期。需要购买设备，并自行搭建设置和后期维护。软硬件投入无需投入软硬件成本，按需购买，弹性伸缩。数据库服务器成本相对较高，对于MicrosoftSQLServer需支付许可证费用。系统托管无需托管。需要自购2U服务器设备，如需实现主从，购买两台服务器，并进行自建。维护成本无需运维。需要投入大量人力成本，招聘专业的DBA进行维护。部署扩容弹性扩容，快速升级，按需开通。需采购和原设备匹配的硬件，需托管机房的配合，需部署设备，整体周期较长。资源利用率按实际结算，100%利用率。考虑峰值，资源利用率低。RDS和自购服务器搭建数据库服务对比51a!"#$%&'()/0!*#$%&'12#3!,#$456789:;<=

第四部分SQL语言介绍MySQL客户端介绍52MySQL服务运行起来后，可以有很多种方式连接MySQL服务器访问数据，可以使用的客户端包括：MySQL命令行工具是最基础的数据库管理工具，该工具最常用的命令有以下几个：mysql：直接连接数据库，将各种命令请求发送给数据库，并将数据库响应的结果输出。参数：-h所连接的数据库服务器地址-P数据库服务器端口号-u用户名-p密码mysqladmin：是一个执行管理操作的客户端程序，用来管理数据库服务，可以执行查看数据库服务的运行状态或修改root用户密码等工作mysqldump：mysql用于转存储数据库的实用程序。它主要产生一个SQL脚本，其中包含从头重新创建数据库所必需的命令CREATETABLEINSERT等。图形界面客户端软件53Navcat：Navicat是一套快速、可靠并价格适宜的数据库管理工具,适用于三种平台:Windows、macOS及Linux。功能强大、操作流程、简单易用，而且能连接的数据库种类繁多，需要付费。官方网址：http://www.navicat.com/MySQLWorkbench：MySQLWorkbench是MySQL官方提供的图形化管理工具，支持数据库的创建、设计、迁移、备份、导出和导入等功能，分为社区版和商业版，社区版完全免费，而商业版则是按年收费。性能稳定、功能强大，支持Windows、macOS、Linux等主流操作系统，允许查看服务器状态、运行状况，以及服务器日志官方网址：https://www.mysql.com/products/workbench/DBeaver：DBeaver是一个通用的图形化数据库管理工具和SQL客户端，支持MySQL,PostgreSQL,Oracle,DB2,MSSQL,Sybase,Mimer,HSQLDB,Derby,以及其他兼容JDBC的数据库。分社区版和PRO版，社区版完全免费，PRO还版细分为三个不同版本。支持Windows、macOS、Linux等主流操作系统，允许查看数据库结构、执行SQL查询和脚本，浏览和导出数据，处理BLOB/CLOB数据，修改数据库结构等等。官网网址：https://dbeaver.io/Web界面客户端

543、Web界面客户端phpMyAdmin是一个以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，可以让使用者通过网页界面管理MySQL数据库，也是同类软件中最受欢迎的工具之一，主要是因为它使用起来非常容易，并且完全免费。phpMyAdmin特点如下：基于网页设计，完全跨平台，大多数计算机都可以轻松访问，提供80种语言选项。官网网站：https://www.phpmyadmin.net/获取演示数据并导入数据库

551.获取演示数据库（employees）#yuminstallgit#cd~#mkdirtest_db#cdtest_db#gitinit#gitpullhttps://gitee.com/dreamToDream/test_db.git

2.导入演示数据库方法一：#在test_db目录下运行：#mysql-uroot-p<employees.sql#mysql-t<test_employees_md

5.sql方法二：#mysql-uroot-p>sourceemployees.sql>sourcetest_employees_md

5.sql本次演示使用Linux系统下mysql命令行客户端程序完成。56a!"#$%&'()/0!*#$%&'12#3!,#$456789:;<=!>#$678?@<=什么是SQL57SQL是StructuredQueryLanguage（结构化查询语言）的缩写，是一种专门用来与数据库沟通的语言。SQL语言的优点：•不是某个特定数据库供应商专有，几乎所有的DBMS都支持SQL•SQL简单易学，它的语句全都是由有很强描述性的英语单词组成，而且关键字数量不多•功能强，通过灵活组合语言元素，可以进行非常复杂和高级的数据库操作SQL的扩展：许多DBMS厂商在标准SQL的基础上对SQL进行了扩展，这种扩展虽然可以提供额外的功能或简化操作，但是不利于数据库迁移。数据库的结构一般是数据库->表->列->行•数据库（database）：保存有组织的数据的容器•表（table）：某种特定类型数据的结构化清单•列（column）：表中的一个字段，所有表都是有一个或多个列组成•数据类型：所允许的数据的类型•行（row）：表中的一个记录•主键（primarykey）：一列（或一组列），其值能够唯一的标识表中每一行Tips：数据类型及其名称是SQL不兼容的一个主要原因MySQL数据类型58•整数•tinyint•smallint•mediumint•int•bigint•unsigned(关键字定义无符号整数)•小数•精确小数类型decimal(精度确定的小数类型)•浮点数类型float(单精度),double(双精度)•字符串•定长字符串类型：char•变长字符串类型：varchar•文本类型：tinytext,text,mediumtext,longtext•日期•date<YYYY-MM-DD>•time<HH:ii:ss>•year•datetime<YYYY-MM-DDHH:ii:ss>•timestamp•复合型•枚举类型enum•成员类型set•二进制•binary•varbinary•位类型•bit•BLOB类型（二进制大对象）•tinyblob•blob•midiumblob•bigblobMySQL表操作59查看数据库下的包含的表名称：SHOWTABLES;查看表结构：DESC表名;查看表创建命令：SHOWCREATETABLE表名;创建表语法CREATETABLE表名(字段名1数据类型[约束条件],...[其他约束条件],)其他选项（如存储引擎、字符集）例：CREATETABLEtest(idTINYINTPRIMARYKEYAUTO_INCREMENT,nameVARCHAR(20));设置主键(primarykey)约束:AUTO_INCREMENTENGINE=InnoDB/MyISAMDEFAULTCHARSET=utf8修改表ALTERTABLEtestadd(bir_daydate);插入数据INSERTINTOtest(name)values('test');从已有的表复制新表：USEtest;只复制表结构CREATETABLEuser2LIKEmysql.user;复制表结构和数据CREATETABLEuserSELECT*FROMmysql.user;SELECT*FROMuser修改表结构：ALTERTABLEuserdropx509_issuer;ALTERTABLEuseraddidtinyint

(3)first;ALTERTABLEuseraddagetinyint

(3)aftername;修改字段类型ALTERTABLEuserMODIFYageint

(3);修改字段名ALTERTABLEuserCHANGEageuser_ageint

(3);修改表名RENAMETABLE旧表名to新表名；MySQL表记录检索60SELECT语句概述DQL数据查询语言DDL数据定义语言语法格式：SELECT字段列表FROM数据源[WHERE条件表达式][GROUPBY分组字段[HAVING字段表达式]][ORDERBY排序字段[ASC|DESC]]别名的写法：SELECTAVG(salary)ASavgsalaryFROMsalaries;等价于SELECTavg(salary)avgsalaryFROMsalaries;示例：根据员工编号汇总工资总和发放年数SELECTemp_no,SUM(salary)ass_sum,COUNT(salary)ass_countFROMsalariesGROUPBYemp_noORDERBYs_countDESClimit20;用谓词限制记录的行数SELECT*FROMsalariesORDERBYsalaryLIMIT0,6;升序排列，DESC为降序排列，limit限制输出DISINCT限制重复记录对于无主键的表可以过滤结果集中的重复行；limit[开始位置],输出条数开始位置为从0开始多表查询61使用FROM子句指定数据源指定连接条件的方法：

1、在where子句中指定连接条件；

2、使用from子句示例：查询一下各个部门经理的名字和工号SELECTa.emp_no,a.dept_no,b.title,b.from_dateFROMdept_managerasaJOINtitlesasbONa.emp_no=b.emp_no;3张表查询innerjoin查询一下各个部门经理历年的薪酬情况SELECTa.emp_no,first_name,b.dept_no,c.salary,c.from_date,c.to_dateFROMemployeesasaJOINdept_managerasbONa.emp_no=b.emp_noJOINsalariesascONb.emp_no=c.emp_nolimit10;部门员工年薪>70000，从高到低排序SELECTa.emp_no,first_name,b.dept_no,c.salaryASsalaries,c.from_date,c.to_dateFROMemployeesasaJOINdept_managerasbONa.emp_no=b.emp_noJOINsalariesascONb.emp_no=c.emp_noWHEREc.salary>70000ORDERBYsalariesDESC;索引62索引：用来排序数据以加速搜索和排序操作的顺序，类似于书的目录索引的设计原则：•原则1：表的某个字段值离散度越高，该字段越适合选座索引的关键字•原则2：占用存储空间少的字段适合于做索引•原则3：较频繁的作为where查询条件的额字段应该创建索引，分组字段或者排序字段应该创建索引，两个表的连接字段应该创建索引•原则4：更新频繁的字段不适合创建索引，不会出现在where子句中的字段不应该创建索引•原则5：最左前缀原则•原则6，尽量使用前缀索引约束主要用于保证业务逻辑操作数据库时数据的完整性；是逻辑层面的概念索引则是将关键字数据以某种数据结构的方式存储到外存中索引种类：主索引唯一性索引普通索引创建索引方法一：创建表的同时创建索引[unique(不允许重复，可用为空)|fulltext]index[索引名]（字段名[(长度)][asc|DESC]）方法二：在已有表上创建索引语法一：create[unique(不允许重复，可用为空)|fulltext]index[索引名]on表名(字段名[(长度)][ASC|DESC]）语法二：altertable表名add[unique(不允许重复，可用为空)|fulltext]index[索引名]（字段名[(长度)][ASC|DESC]）删除索引dropindex索引名查看索引SHOWindexfrom表名;数据插入、更新63INSERT语法：INSERTINTO表名[(字段列表)]values(值列表)[,(值列表)];keyPRI主键必须唯一keyMUL多对一可以一次插入多条记录在employees表中新插入一条记录：INSERTINTOemployees.employees(emp_no,birth_date,first_name,last_name,gender,hire_date)VALUES(900000,'1977-07-7','san','zhang','M','1999-09-9');复制一个表的结构到一个新表CREATETABLEemployees_mLIKEemployees;从已有的表复制数据到新表内INSERTINTOemployees_mSELECT*FROMemployeesWHEREgender='M';REPLACE语法：格式1：REPLACEINTO表名[(字段列表)]values(值列表)格式2：REPLACE[INTO]目标表名[(字段列表1)]SELECT(字段列表2)FROM源表WHERE条件表达式;格式3：REPLACE[INTO]表名set字段1=值1,字段2=值2使用REPLACE向表插入新纪录时，如果新纪录的主键或唯一性约束与原有相同，则会删除原有的记录，相当于将delete和insert结合在一起update语法：UPDATE表名SET键1=值1，键2=值2WHERE条件；记录删除：条件删除:DELETEFROM表名WHERE条件；清空表数据，保留表结构：TRUNCATE表名TRUNCATE语句不支持事务，不触发触发器例：查询一下各个部门经理名字和历年薪水的总和SELECTa.emp_no,first_name,b.dept_no,SUM(c.salary)assalaries,c.from_date,c.to_dateFROMemployeesASaJOINdept_managerASbONa.emp_no=b.emp_noJOINsalariesAScONb.emp_no=c.emp_noGROUPBYa.emp_noORDERBYsalariesDESC;高级SQL语句-聚合64聚合：使用GROUPBY子句将查询结果按照某个字段(或多个字段)进行分组(字段值相同的记录作为一个分组)GROUPBY子句通常和聚合函数一起使用。加入HAVING条件表达式：SELECTgender,count(gender)ASgenser_countFROMemployeesGROUPBYgenderHAVINGgender='M';条件聚合：HAVING子句用于设置分组或聚合函数的过滤筛选条件，通常与GROUPBY子句一起使用。HAVING子句语法格式与WHERE子句语法格式类似，其中条件表达式是一个逻辑表达式，用于指定分组后的筛选条件没有使用HAVING子句SELECTgender,count(gender)ASgenser_countFROMemployeesGROUPBYgender;GROUP语法：GROUPBY字段列表[HAVING表达式][WITHROLLUP]使用正则表达式模糊查询regexp例：SELECTfirst_name,last_nameFROMemployeesWHEREfirst_nameREGEXP'jin'limit10;组合查询65组合查询：使用UNION将多个SELECT连接起来语法：SELECT字段列表1FROMtable1WHERE条件1UNION[all]SELECT字段列表2FROMtable2WHERE条件2说明：字段列表1和字段列表2的字段个数必须相同，且具有相同的数据类型。合并产生的新结果集的字段名与字段列表1中的字段名对应例：SELECT*FROMemployeesWHERElast_name='Peac'LIMIT10UNIONSELECT*FROMemployeesWHEREfirst_name='Jinxi'LIMIT20;UNION和UNIONALL的区别,UNIONALL返回的结果中包含了全部行，即重复的行视图66什么是视图：视图是虚拟的表，与包含数据的表不同，视图是包含使用时动态检索数据的查询。为什么使用视图•重用SQL语句•简化复制的SQL操作。在编写查询后，可以方便地重用它而不必知道其基本查询细节•使用表的一部分而不是整个表•保护数据（可以授予用户访问表的特定部分的权限，而不是整个表的访问权限）•更改数据格式和表示。视图可以返回与底层表的表示和格式不同的数据视图示例：之前的一条涉及三表查询的语句可以写成视图：CREATEVIEWdept_manager_salariesASSELECTa.emp_no,first_name,b.dept_no,SUM(c.salary)ASsalaries,c.from_date,c.to_dateFROMemployeesASaJOINdept_managerASbONa.emp_no=b.emp_noJOINsalariesAScONb.emp_no=c.emp_noGROUPBYa.emp_noORDERBYsalariesDESC;直接通过视图查询：SELECT*FROMdept_manager_salaries;通过条件查询：SELECT*FROMdept_manager_salariesWHEREemp_no=110085;存储过程67什么是存储过程：存储过程是为以后使用而保存的一条或多条SQL语句，可以将其视为批处理操作，不过功能会更复杂为什么要使用存储过程：•通过把处理封装在一个易用的单元中，可以简化复杂的操作•由于不需要反复建立一系列处理步骤，因而保证了数据的一致性•简化对变动的管理。如果表名、列名或业务逻辑有变化，那么只需要更改存储过程的代码，其他人员甚至不需要指导这些变化•存储过程通常以编译的形式存储，所以DBMS处理命令所需的工作量减少了，提高了性能存储过程的缺点：•不同DBMS中的存储过程语法有所不同，很难进行跨DBMS的迁移。但存储过程对外的调用名是固定的，所以迁移时对存储过程需要重新编写，但是客户端代码一般不需要进行调整•编写存储过程比编写基本SQL语句复杂，需要更高的技能和更丰富的经验，因此许多数据库管理员会限制存储过程的创建事务处理68什么是事务：事务处理（transactionprocessing），通过确保成批的SQL操作要么完全执行，要么完全不执行，来维护数据库的完整性。事务处理关键字：•事务（transaction）指一组SQL语句•回退（rollback）指撤销指定的SQL语句•提交（commit）指将未存储的SQL语句结果写入数据库表•保留点（savepoint）指事务处理中设置的临时占位符，可以进行部分回退事务的特点：一般来说，事务是必须满足4个条件（ACID）：原子性（Atomicity，或称不可分割性）、一致性（Consistency）、隔离性（Isolation，又称独立性）、持久性（Durability）。•原子性：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。•一致性：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。•隔离性：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Readuncommitted）、读提交（readcommitted）、可重复读（repeatableread）和串行化（Serializable）。•持久性：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。69!"a3数据库设计1数据库综述2数据库使用目录CONTENTS世界触手可及5实践案例介绍4自研分布式数据库70!"#$AB%&'C0!*#$DE$FG%&'C0!"传统数据库架构往往采用单实例数据库架构现象传统单实例数据库架构三宗罪•何为单实例数据库架构？即仅采用单实例数据库支撑业务系统的架构，简单、上手快存储扩展难•存储容量受限于SSD或云盘大小，1~2T，极限是4T•同理，磁盘带宽(10PS）也有天花板，该限制更加突出计算扩展难•运行在单机上，CPU/内存/网络处理能力受限于机器配置•大表的频繁操作，会导致数据库性能急剧下降，影响业务可靠性较差•鸡蛋放在一个篮子里，数据库故障影响面100%•RDS主备模式可以部分缓解问题只能支撑中小规模的业务系统ScaleUp垂直扩展•买高端硬件对于不差钱的客户，也是一条出路•但随着业务规模逐渐增大，这条路越来越走不通阻碍业务创新ScaleOut水平扩展•一双筷子容易折断，十双筷子就难断•水平扩展，使用普通硬件，构建数据库集群•化整为零，分而治之，按需扩展•是当今业界非常成熟的分布式数据库实践75!"#$AB%&'C0!*#$DE$FG%&'C0!"

1.云上数据库的技术走向•当前云环境下，计算存储天然分离，它们之间通过网络互通，以支持多租户数据库实例以及更好的横向扩展。而过去30年里不断发展、日趋成熟的传统数据库架构，已经不适用于云的这一特点。•例如，传统数据库提供只读节点，通过复制binlog或者redo以增加可用性和可靠性，但是在云环境下，存储层本身就提供了类似的副本/复制技术以保障数据的高可用和高可靠，所以理论上来说，传统数据库存在很大的资源浪费，完全可以共享存储。•为了解决这些问题，结合云上的多租户共享存储技术，计算与存储分离架构的云原生数据库应运而生。这种数据需要具备三个关键要素：计算与存储分离，多租户共享存储和软硬件的垂直整合。•提升性能的同时，还能够提供计算的弹性扩展，存储的自动扩充等能力Gartner报告：截止2019年，90%的云数据库采用计算与存储分离架构，其余10%，会被市场逐生淘汰云数据库的技术需求在业务和应用进行“云化”的过程中，云数据库因为在整体架构中的重要地位，在云化改造中的重要性不言而喻。云数据库的核心需求有一下几点，主要有：

1.弹性扩张能力：数据库容量需要根据业务弹性扩展，满足不同业务的容量需求；

2.弹性部署与随需应变能力：除了数据库的存储，其他数据库功能也需要根据应用的需求，进行弹性的部署调整；

3.数据可靠性与服务持续能力：数据的可靠安全，全时在线是所有业务的必须要求；

4.计算存储分离：将计算和存储资源灵活配置，既可以选择多种计算方式也可以同时对应多种存储方式，满足更多业务需；

5.多模式存储能力：结构化、非结构化、半结构化和图等多类型数据的存储；

6.自我管理能力：提供零停机维护、持续集成、以及滚动升级能力，提升开发人员效率；

7.自我监控以及问题修复能力：故障监控和问题修复，降低运维成本；

8.是否满足特定应用场景：针对特定场景的可插拔组件或工具；

9.监管与安全：满足监管的要求，保证数据的安全。云数据库架构方向!"#$%&'()*+,-.%&/!0123456789:;<=2>?6!"#$2%&@ABCDEF2>?GHIJKLMNOPQRSTEU9:GH!"#$VWRXYZ[\]^_`2"#a=b3cdef3cd[_%&STEUghij^ka=<=%&2Fl6ka=FlmDa=_nopqrst^;uvwx?y云数据库架构

1.存储-SQL分离!"#$%&'()*+,-./012'$%&+,34556789/3:;$%&'<=>?@ABCDE+,F=>?@ABCD+,/GH$%&'=>IJ*@ABIJKLCMNOPQRSTU'+,FVWX0+,/C7=>Y@AB*Z$%[\LCF云数据库架构!"#$%&'()*&'()+,-."#%&'/.0123456789:;*<="#%>?@ABC0DE*&'FGHGIJK(LMNOPQRLSTUVWXYZ0=>]["#\+,&']^"#$%_`["#ab0Z$%^cdeFfg+,-.cdehi*jFklmnHopT*qHopT%rshituv&'F*wxly&'Fz{%"#|}0@AB]云数据库架构MySQL数据库整体技术模块架构云数据库架构

二、多模Multi-Model云数据库的“多模”示意图云数据库架构

二、多模Multi-Model为了实现业务数据的统一管理和数据融合，新型数据库需要具备多模式（Multi-Model）数据管理和存储的能力。数据库多模Multi-Model是指同一个数据库支持多个存储引擎，可以同时满足应用程序对于结构化、半结构化、非结构化数据的统一管理需求。通常来说，结构化数据特指表单类型的数据存储结构，典型应用包括银行核心交易等传统业务；而半结构化数据则在用户画像、物联网设备日志采集、应用点击流分析等场景中得到大规模使用；非结构化数据则对应着海量的的图片、视频、和文档处理等业务，在金融科技的发展下增长迅速。多模式数据管理能力，使得金融级数据库能够进行跨部门、跨业务的数据统一存储与管理，实现多业务数据融合，支撑多样化的金融服务。在架构上，刚刚提到的多模Multi-model也是针对云数据库需求的，则使得数据库使用一套数据管理体系可以支撑多种数据类型，因此支持多种业务模式，大大降低使用和运维的成本。云数据库架构

三、灾备和多活对于应用程序来说，开发人员并不希望在设计应用的过程当中花费大量的精力来考虑底层数据高可用、灾备与多活时应用的切换逻辑。一般来说，一个成熟的数据库云平台层应当尽可能将底层的数据多副本同步、灾难切换、高可用接管等一系列操作进行封装，对于应用程序做到完全透明。在传统的应用程序开发中，开发者使用中间件容器对数据源进行配置，底层使用F5或其他虚拟IP地址对多个数据源进行封装。但是，在云化的演变过程中，底层的数据库从单一节点向分布式节点过渡，对于上层的应用程序一方面希望尽可能减少应用程序设计时对分库分表的依赖，另一方面更希望在数据节点切换，甚至数据中心灾难接管的过程当中做到应用透明无感知。云数据库架构云数据库架构云数据库架构优势在技术驱动的需求下，云数据库架构具备了几项主要的业务价值：

（1）无需分库分表：此前，一种数据库分布式改造的方向是关系型数据库往分布式架构改造，MySQL分库分表就是其中一种方案。如今，存储-SQL分离的架构，在数据存储层已经实现原生分步实施，就避免了复杂冗长的“分库分表”方案。

（2）灵活支撑业务需求：存储和SQL层都可以实现服务、存储的弹性调整，灵活地支撑业务的需求。多存储引擎兼容：由于SQL和存储层的分离，在保持SQL接口不变的情况下，底层存储引擎可以支撑多个不同引擎，实现多种数据引擎的同时兼容。

（3）完全兼容已有应用：由于SQL层更多使用已有的标准SQL解析器，因此对于原有应用在SQL上可以实现完全的兼容，没有任何应用改造的投入。

（4）数据安全可用：分布式的存储和松耦合的架构，数据拥有安全的多副本，松耦合则大大增强了整个系统的容错性。相比传统单点架构，可以很好的实现数据双活甚至多活的架构，满足“两地三中心”“三地五中心”的合规监管安全要求。小结云数据库是未来数据库发展的一个重要方向，云数据库架构随着云化要求也需要进行相应的迭代，未来在云数据库架构的演进还会随着需求的变化而持续发展。其中对于多模数据引擎、计算存储分离等将是云数据库技术演进的重点方向。89!"a4自研分布式数据库1数据库综述2数据库使用目录CONTENTS世界触手可及5实践案例介绍3数据库设计90!"#$-.$FGHIJ%&'C0KLM!*#$-.%&'NOPQ!"91高可用性分布式架构无服务单点，服务稳定，数据库节点故障自动恢复、秒级主备切换。主备数据高性能强同步复制，高可靠存储，主从同步时延在1秒以内。可扩展性支持多维度的分片算法、自动水平拆分，弹性扩缩容。高性能单机性能>9wTPS（4路8核/128GB内存/ssd卡及以上）。服务能力并发线性增长。事务支持支持单库事务；可对多库事务能识别并报错；支持补偿、XA、SQL日志回滚三种分布式事务方案。易使用支持SQL92标准，高度兼容MYSQL协议、语法，有web管理平台，操作简单。分布式数据库是一种兼容MySQL协议和语法，支持自动水平拆分的高性能、高可靠分布式关系型数据库；数据访问对应用透明，每个分片默认采用主备架构，提供灾备、恢复、监控、不停机扩容等整套解决方案，适用于TB或PB级的海量数据场景。自研分布式数据库核心组件能力特性92支持关系型数据库、NoSQL、分布式文件系统等异构数据源间的数据同步和传输服务。基于日志和表机制的远程复制技术，为同机房、跨机房、异地及异构数据库间提供可靠数据同步，解决远距离、毫秒级异步数据传输难题。可轻松为企业构建安全、可扩展、高可用的数据架构。跨IDC数据同步特色功能支持异构数据库间同步，支持核对同步数据，保障源库和目标库数据一致性，支持按表挂起功能，实现表级的故障隔离，数据同步高性能同步。高可用分布式架构无服务单点，确保服务稳定，源数据库异常可感知数据库主备切换，支持断点续传。可扩展性工作Node节点支持集群化部署，同时支持水平扩展。易用性支持故障自动切换恢复，具备运维监控管理等配套功能，支持并行调度、SEDA策略、数据合并和延迟监控保障数据同步的实时性。低成本运维提供WEB管理控制台，操作简单;数据同步及迁移提供多维度的监控指标，包括工作状态、延迟时间、同步进度、吞吐量等;提供日志管理，可查看、检索异常信息。核心组件能力特性概述LVS-MLVS-S负载均衡keepalivedzkzkzkVIPWEB应用服务进程服务获取服务注册应用层统一数据访问层统一数据访问擎代理数据高可用层ZKZK主库备库Scheduler1Scheduler2ZKZK集群HA命令下发AgentAgent复制VIP状态上报状态下发读写只读切换控制KeeperGateWayZKZK主库备库Scheduler1Scheduler2ZKZK集群HA命令下发AgentAgent复制VIP状态上报状态下发读写只读切换控制KeeperGateWayZKZK主库备库Scheduler1Scheduler2ZKZK集群HA命令下发AgentAgent复制VIP状态上报状态下发读写只读切换控制KeeperGateWayØTELEDB（数据库高可用层）系统边界分布式数据库，由TELEDB（数据库高可用层）与UDAL(统一数据访问层)两个组件有机构成产品概述Ø背景：•云数据库迅速发展，未来75%到80%的应用将使用云数据库服务•传统的MySQL数据库安全能力不足•对生产业务来讲，数据的强一致（Consistency）尤为重要•随着业务需求的不断提高，搭建一个数据库高可用环境已经成为很多企业迫切的需求uTELEDB为当前电信分布式云数据库提供了高可用解决方案Ø应用场景•解决复杂订单业务和处理流程下，数据不一致的问题•解决海量交易情况下，数据库的性能瓶颈•解决海量数据的运营管理，及时发现和解决数据库问题TeleDB为电信及其合作伙伴提供基于交易或订单系统的容灾级别为第三级（业务级别）的云数据库，并已经为交易或订单场景解决了以下问题：概述基本术语Ø增强的半同步•数据库主机在事务提交时，只有当事务数据已经成功同步到备机，并由备机返回ACK确认给主机后，主机才向应用返回事务应答。Ø数据库节点组（SET）•一个数据库节点组（Set）包括：一个主节点（Master）、若干备节点（Slave_n）。主备数据库节点之间通过数据复制及其它机制保持数据的一致性。Ø闪回（flashback）•和ORACLE闪回概念一致的，把数据库回退到某个点的状态。•其原理是利用MySQL的binlog日志进行逆操作•在MySQL中BINLOG如果是ROW格式的，会记录每个DML语句的ROW的完整信息Ø白名单•白名单是能从外部某台服务器登录数据库的IP或VIP。•若某个用户需要从外部某台服务器登录数据库，则必须在网关上添加外部服务器的IP到白名单中功能介绍pTELEDB功能汇总列表1功能大类功能点说明基本功能兼容数据库引擎兼容MySQL

5.7，MariaDB10.0存储引擎支持InnoDB标准引擎程序设计语言支持数据定义语言(DDL)、数据操作语言(DML)、数据查询语言(DQL)、数据控制语言(DCL)，事务控制语句（TCL）字符集支持支持utf

8、gbk、latin1等多种字符集，但建议使用utf8mb4分布式事务支持默认的InnoDB存储引擎提供了对XA事务的支持安全性白名单访问控制使用白名单限制登录IP原子级的用户权限控制支持采用MySQL最细粒度的权限控制手段，权限细化到IP、端口、对象级权限控制账户有效期能设置用户的访问有效期账户登录失败次数限制能设置账户的登陆的次数root账户锁定支持对超级管理员败号root进行锁定，避免恶意用户通过root进行高危操作一致性增强半同步复制支持数据库主备之间采用强同步复制，强同步意味着主备数据库数据完全一致半同步复制支持数据库主备之间采用半同步复制方式，即通帯情况下主备数据库数据完全一致，如果遇到超时时，主数据库转为异步复制方式异步复制支持数据库主备之间采用异步复制方式功能介绍pTELEDB功能汇总列表2功能大类功能点说明容灾和恢复高可用切换TeleDB的故障检测在秒级别（可配置），得益于Master、Slave之间高效数据同步，主发生故障后，主备自动切换时间在分钟级别，且可以保障数据的完整性、一致性一主多从架构支持配置一主多从架构，从机数量按需可配置，但建议为一主两从架构数据库备份数据库自动化备份方案，支持全量备份+增量备份、binlog备份等。在agent中集成对数据库实例的备份功能，通过telemonitor进行备份配置，可以指定备份时间、周期、清理历史备份数据规则等参数。数据库恢复支持通过备份数据进行数据库实例恢复、单表恢复，用于快速新建数据库实例或者恢复数据表文件，可以指定恢复参数。性能优化线程池支持采用线程池技术来解决最大连接数限制问题以及过多线程带来的系统开销读写分离支持读写分离，备机可用于业务读取数据（不可写），进而大幅提高性能监控和问题排查数据库监控支持对数据库实例的全部关键指标进行监控，包括底层的节点监控、集群模块监控；包括数据库层面的访问监控、负载监控、查询缓存监控、表监控、存储引擎监控等高可用切换监控支持主从高可用切换的监控支持慢查询分析支持对Slowlog进行分析，帮助用户排查问题，提高SQL性能支持错误日志告警对errorlog里产生的error等信息进行告警支持日志下载分析支持下载binlog、errlog等，用户可以通过分析工具对sql问题进行分析。功能介绍pTELEDB核心功能详解Ø增强的半同步复制：MYSQL官方版提供的异步和半同步复制，容易出现数据不一致的问题，直接影响系统可靠性，甚至可能丢失交易数据。为此，TELEDB引入增强的半同步机制MASTERSLAVEAPPRelaylogIOTHDDUMPTHDUSERTHDEngineCommitBinlog.00000.456LatestACKBinlogBinlogCOMMITOKACKRequestQueueSyncWritePushACKSendEventsSendEventsWithoutACKRequestsWithACKRequestsWaitACKu数据强一致：TELEDB对MYSQL复制模块的改造，引入增强的半同步，让应用的事务提交时，事务产生的日志最少在主备两个数据库上都已经存在了。因此，此时主库Crash的话，备库提供服务，其数据与主库是一致的，没有任何事务的数据丢失问题。功能介绍p建议采用一主两从的数据同步方案Ø性能问题u相对于异步写Slave，增强的半同步方式多了一次Master到Slave的网络交互，同时多了一次Slave上的磁盘sync操作。反应到应用层面，表现为TPS的下降。Ø可用性问题u同步下，在一主一从架构下，如果从库CRASH掉，那么主库将会因为收不到ACK确认而挂死Ø解决方案u增加SLAVE的数量，数据库组的结构由一主一从变为一主两从（强同步）u由一主一从变为一主两从，只要有一个Slave的日志同步完成返回，加上本地的Master日志也已经落盘，提交操作就可以返回了。两个Slave的部署，对于消除瞬时的网络抖动，非常有效果。u任一从库CRASH，主库仍然可以写入演化核心功能介绍pTELEDB核心功能详解Ø高可用自动切换功能•自动检测、自动切换，无需人工干预；•发生切换的历史记录在TELEMONITOR前台界面可查，可配置告警•切换过程保障主备数据完全一致，未同步数据不会返回事务响应；•快速路由切换，秒级检测，分钟级切换。•下图是高可用自动切换的基本实现原理（只展现原理，TELEDB的具体实现要复杂得多）pTELEDB核心功能详解Ø高性能读写•TeleDB抛弃了MySQL传统连接模式——每连接每线程，这种连接模式会导致巨大的系统开销进而影响整个性能。因此，TeleDB使用线程池技术来解决最大连接数限制问题以及过多线程带来的系统开销。tcp连接tcp连接线程1线程2线程的执行流程:While

(1){

1.read一条sql;

2.执行sql;(半同步,galera这个环节需要访问远端的机器,导致此处耗时多)

3.Send应答;}tcp连接tcp连接线程1线程的执行流程:While

(1){

1.取一条通过epoll检测到有可读事件的连接//线程与连接不再一一对应,每次工作都要取一条可用连接

2.read一条sql;

3.执行sql;(半同步,galera这个环节需要访问远端的机器,导致此处耗时多)

4.Send应答,绑定到epoll中}一个连接一个线程的模型线程池模型pTELEDB核心功能详解Ø性能测试数据线程池VS每连接每线程pTELEDB核心功能详解Ø自动备份与恢复•备份/恢复工具基于xtrabackup工具，结合自主开发的telemonitor监控平台，可以在平台上直接进行相应数据库集群的备份/恢复工作

1、Xtrabackup属于在线热备份工具，不锁表，备份时不影响数据库实例的读写性能；

2、界面化操作，只需在telemonitor前端界面填写相应的备份或恢复策略，开启自动备份恢复功能；

3、通过前端结果展示可以看到备份与恢复的成功与否的详细历史信息；•灵活的备份机制

1、针对特定set集群，可指定全量备份、增量备份、BINLOG备份等不同的备份方式。

2、可以在界面中灵活配置全备周期、相邻两次备份间隔、首次备份开始时间等备份参数；

3、为节省磁盘空间，可指定删除策略，仅保留最近几个周期的备份数据；•多维度的恢复策略

1、针对特定数据库实例，可选择对其进行数据库实例恢复或单表恢复；

2、可进行指定时间点或指定gtid点前的数据库实例恢复或单表恢复；

3、完善的错误检测机制，当发现恢复出现问题时，日志中给出详细的错误报告；pTELEDB架构网关层DB层pTELEDB各组成模块及其功能Ø网关GATEWAY：在网络层连接管理SQL解析，分配路由•为保证网关高可用，至少部署GATEWAY一主一备，用VIP和KEEPALIVED方式实现高可用切换•从配置集君ZOOKEEPER拉取SET状态，提供SET路由，实现透明读写•记录并监控SQL执行信息，分析SQL执行效率；ØKEEPER：作为集群的管理调度中心，主要管理SET的正常运行：•为保证KEEPER高可用，至少部署三台KEEPER在三台独立机上，•通过配置集群（zooKeeper）的选举机制完成容灾，保证调度集群无故障；•提供SET节点的创建、删除、替换等工作。控制主从切换是其核心功能。ØDB层：数据库节点组，由MySQL数据库引擎模块以及监控和信息采集系统AGENT两个部份组成•一个数据库节点组（SET）包括：一个主节点（Master）、若干备节点（Slave),一般是一主两从•SET通过心跳监控和信息采集模块（agent）监控，确保集群的健壮性；•分布式架构下，若干个数据库节点组（SET）可以提供一个“逻辑统一，物理分散”分布式数据库实例ØZOOKEEPER：各个模块之间的交互都是通过配置集群ZK来完成的•一旦ZK崩溃，各个模块之间的通信全部中断。•ZOOKEEPER内部实现PAXOS算法，保证分布式系统的数据一致性uAGENT的作用•agent用于收集底层DB服务器的状态信息，并将相关信息写入zookeeper•DB服务器状态信息包括：底层数据库状态信息（如是否可读写），主从数据复制延迟等信息u组成模块•DBagent由mysqltransfer、mysqlreport及相关工具类组成•mysqltransfer现阶段一般不启用•Mysqlreport上报心跳信息、并参与主从切换的流程pAgent模块技术特性和原理uMysqlreport功能1：心跳上报•Mysqlreport创建到MySQL的连接，获取主从信息、判断MySQL存活状态（如右图）•Mysqlreport将心跳住处写入到ZK中指定的目录uMysqlreport功能2：引起主从切换•通过在数据库上面分别部署Mysqlreport，引入租约（Lease）机制•租约协议：Mysqlreport每隔一段时间发送一次心跳到ZK，续租它所在的数据库的主库状态。如果一直没收到续租请求，KEEPER会下发将主库降级成备库，将从库升级主库，及重建主从的命令给AGENT•MYSQL的主库降级及主从重建的具体操作均由AGENT负责完成•引入AGENT付出的代价：不只主库MySQL服务异常，agent进程（也就是Mysqlreport进程）出现异常也会引起主从切换pAgent模块技术特性和原理uKEEPER的功能•keeper是TELEDB架构中调度器，通过AGENT上传的住处，决定是否发起主从切换流程。•KEEPER监听zookeeper的特定路径，主要用于监控底层主数据库与备数据库的可用状态、数据库同步延迟等信息。uKEEPER的技术特性•keeper容灾功能（KEEPER自身的高可用）•数据库监控•高一致容灾（MySQL的高可用）pKEEPER模块技术特性和原理uKEEPER的部署结构•KEEPER会在不同的物理机上部署三台实现高可用容灾，解决单点问题•三台KEEPER主机通过PAXOS协议自动选主。实现时是通过ZOOKEEPER。因为ZK内部实现了PAXOS协议。uKEEPER的LEADER选举流程•

1、判断是否有leader，若没有则进行选举•

2、选取出各自在/beta0.1/election/下的节点编号，如/beta0.1/election/elec@10.

142.90.88_0000000004•

3、取出所有节点中最小的编号，并升为leader，如10.

142.90.89节点编号为/beta0.1/election/elec@10.

142.90.89_0000000002，10.

142.90.90节点编号为/beta0.1/election/elec@10.

142.90.90_0000000003，则选举10.

142.90.89节点为新的leader•

4、原leader在故障恢复后再加入keeper集群，其新编号是在集群中最大的编号之后再加1,如当前最大节点的编号是/beta0.1/election/elec@10.

142.90.90_0000000003，则原leader节点新编号为/beta0.1/election/elec@10.

142.90.88_0000000004pKEEPER自身的容灾ZK-SERVERZK-SERVERZK-SERVERZK-CLIENTZK-CLIENTZK-CLIENTKEEPER1KEEPER2KEEPER3Leader选举节点失效CONFIG变更EEZK节点/beta0.1/election/u设计原则•MySQL主机可读可写，备机为只读状态，备机可以开放给业务查询使用•任何时刻同一个set不能有两个主机，避免双写问题•为了追求数据一致性，宁愿不提供错误服务，牺牲部分可用性u一主两从下的MySQL主从容灾切换流程•

1、主DB降级为备机（杀死当前所有session,设置只读，如因为当机原因没有收到下次重新启动也会执行这个流程），同时会给网关下发暂时没有主节点的路由•

2、参与选举的备机停止io线程之后上报最新的binlog点•

3、scheduler收到binlog点之后，选择出binlog最大的节点(可能同时有２个)并要求对应的机器加载完relaylog。当收到加载完relaylog信息之后，则选择这个应答的节点为主机；•

4、重建主备关系•

5、修改路由•

6、请求发给新的主机pKEEPER高一致容灾（MySQL主从切换）uZK的作用•Zookeeper是TELEDB集群信息存储和交互的中心•Zookeeper中的存储信息基本是由agent和scheduler写入，反过来agent、scheduler、gateway定期获取zookeeper中相应的信息，如右图1。uZK的节点目录结构•ZK上存储着高可用架构用到的所有动静态信息，如右图2，详细请参见《TELEDB完全手册》。下面列表部份有代表意义的节点目录•数据库节点组Set信息/beta0.1/sets•KEEPER选举信息/beta0.1/election•心跳信息/beta0.1/heartbeats•配置信息/beta0.1/configspZOOKEEPER模块设计Zookeeper勃DBagent尺DBagentKeeperGateway缓轰忌裤，set，隹敦沐六蜿淋出撩超敦沐缓轰heartbeats，12敦沐撩heartbeats，set，user敦沐/DSQLheartbeatsroutesresourcesjobsrsip@ip1rsip@ip2rsport@port1rsport@port2ipinfo@ip1rsinfo@ip1_port1aJobs@Ip1_port1AgentGWwatchdeliverjob@shardexcjob@shardKeeperset碍agnetwatch贤hb@ip1_port1Agent弊殓碍keeperwatchsetsset@set_1setinfo@set_1rtns@globalddljobsddljob@D.Tsliceskpslicesgwslicesrssetinfo@ip1_port1mansetsmanset@1setrun@set1rt@db

1.tb1configscfg@shardcfg@metajobansddljobsansddljobans@D.Tcfg@dbcfg@recoveryelectionelection@n_1slicedst@srchostmetamshard@D.Tprivilegesprivns@globalpriv@db1cfg@versionresultsshardslice@db.tb_shard1lock@db

1.tb1results@hostkpslice@hostresult@shardsetlock@set_1userjobmoveshard@shard1emptysetsclearsetans@set1emptyset@set_1consistswsconsistsw@set_1swjobs@Ip1_port1swjob@Ip1_port1swjobans@Ip1_port1partitionspartition@db

1.tb1clusterpartitionsclusterpartition@db.tbreplacehost@set_1113!"#$-.$FGHIJ%&'C0KLM!*#$-.%&'NOPQ!"应用设计原则合理的表结构设计简洁的小SQL语句应用设计的基本原则必要的索引应用设计的基本原则应用开发约束pMySQL表设计规范•为什么字段类型越短越好（能用整形的尽量用整形，比如tiny代替char

（1））等•

1.更少的存储空间•

2.更少的磁盘IO•

3.更少的网络IO•

4.更少的MySQL计算空间•

5.更少的APP计算空间•

6.整形存储和运算代价比字符型小•有text字段的，最好请分表。（本质上说,不是MySQL不适合存储text,而是在太多的情况下我们期望MySQL能够更加高效的提供小数据查询/事务处理）•表字段数少而精应用开发约束pMySQL表设计规范•首先明确规定：禁用存储过程，函数，触发器，视图，外键；所有逻辑业务上实现•a)一定使用innodb引擎，不允许用myisam。•b)业务表设计时必须包含日期字段，createitme和lastupdatetime•每个表的update语句，必须包含对UpdateTime的更新•所有字段建议为notnull,时间类型必须为notnull•c)必须要有主键，主键尽量用自增字段类型，推荐类型为INT或者BIGINT类型。•d)需要多表join的字段，数据类型保持绝对一致。•e)当表的字段数较多时，将表分成两张表，一张作为条件查询表，一张作为详细内容表。•f)当字段的类型为枚举型或布尔型时，建议使用tinyint类型。（不用char或者varchar）pMySQL表设计规范•统一使用InnoDB存储引擎，UTF8MB4编码•一定要整形ID作为主键(没有主键的表有严重性能问题)•字段类型越短越好•常见字段类型(一般不允许用text和blob)，若必须使用则拆分到单独的表•尽量不要使用defaultnull，字段都定义为：notnulldefault‘合理默认值’•关于create_time和update_time•表结构设计常见问题•推荐用客户端：sqlyog、navicat做日常db设计和导入导出pMySQL表设计规范•为什么必须有自增整形主键，一般该字段没有业务意义（sharding程序自己控制自增值例外）；少用唯一键。•减少复制延迟为什么要用自增ID做主键？（一定要有主键，int/bigint做主键更好）

1.MySQLInnoDB为索引组织表，即使你不设置主键它也会维护一个隐藏主键。所有隐藏主键共享一个自增锁。如果很多表没定义主键，就会成为瓶颈。

2.隐藏主键为一个6字节的整型，可能存在被写完而不被察觉的风险。

3.很多工具一定要求表明确定义主键，如onlineddl（不锁表加索引、字段等表变更）。工具不可用会让日常维护变得复杂。

4.没有设置主键MySQL可能用表上面的唯一索引作为主键，如果这个唯一索引很长，性能将特别差。

5.什么是索引组织表？类似英文字典，每个词按照字母组织的（a-z）

1.越短的单词越容易被查到；

2.MySQLInnoDB所有的二级索引（普通索引）都包含主键，主键越长二级索引越大；

3.添加单词要加在字典已有单词中间，相类似，可能引发数据页的分页操作。但如果一直是追加就不会分页。

6.自增ID可以用来做分页优化。如下语句性能相差1000倍。

1.Select*fromtbllimit10000000,30;

2.Select*fromtblwhereid>10000000limit30;pMySQL表设计规范•为什么尽量不要使用defaultnull•

1.索引不会包括NULL值。影响索引的统计信息，影响优化器的判断。•

2.复合索引中只要有一列含有NULL值，那么这一列对于此复合索引就是无效的。•

3.所以我们在数据库设计时不要让字段的默认值为NULL。•字段统一加上notnulldefault‘合理默认值’pMySQL索引设计规范Ø不要修改聚集索引（主键）•为了维持B+tree会带来大量的数据移动，所以一般要求使用跟业务不相关的id做一个整形自增主键Ø索引不是越多越好，尽量合并索引•

1.索引加快了查询度，但是却会影响写入性能。•

2.一个表的索引应该结合这个表相关的所有SQL综合创建，尽量合并。•

3.组合索引的原则是，过滤性越好的字段越靠前。•例如key(a)和key（a,b）存在，那么key（a）可以删除了，对于select......fromtbwherea=123；可以用到索引（a，b）Ø不要给选择性低的字段建单列索引•MySQL对索引的过滤性有要求，如果过滤性太低MySQL会放弃使用。Ø不要使用外键约束•

1.对性能损耗特别大。•

2.让应用程序去维护约束。pMySQL索引设计规范Ø字符类型字段尽量使用前缀索引•太长的索引不仅影响写入性能，而且使用效果也差，因此字符串类型字段一般只建前缀索引•altertabletest_long_straddindexidx_str(str

(16));Ø合理使用复合索引ØLIKE查询的索引问题•like只能使用前缀索引，因此：•

1.collike"abc%"能用上索引•

2.collike"%abc%"不能能用上索引•

3.collike"%abc"不能能用上索引pMySQLSQL语句规范•一条sql可以搞垮一台db，不要用复杂的sql，能拆小就拆•

1.语句尽量简单，不在数据库做复杂运算•

2.select，insert一定要带上字段名，不允许select*，•

3.优化LIMIT分页：不要用LIMITstart,offset，更高效方法可以找dba•

4.什么是隐形类型转换？常见问题•

5.不允许where后面字段上做运算或者加函数，会导致用不了索引：例如whereid+1=5；wherefrom_unixtime(create_time)等•

6、禁用selectforupdate、insert......selectfrom、select*（必须明确给出需要字段）、insertTBvalues......（必须明确给出字段）、orderbyrand（）语法。•

7、只用innerjoin或者leftjoin；禁止用rightjoin。表关联的on必须有索引，只关联需要表，只选择需要的列•

8、复杂查询拆分简单查询；尽量小批量小语句分段执行；一个sql不要超过1G的binlog•

9、编程语言支持的，尽量学习sql编写使用preparedStatement技术，安全卫生干净可读性强•10、大事务可以setauto_commit=0关闭自动提交，但是拒绝滥用，会导致阻塞pMySQLSQL语句规范•拒绝3大类型sql，•大SQL(BIGSQL)•大事务(BIGTransaction)•大批量(BIGBatch)。合理拆分sql。•比如select*fromTB变成–select*fromTBwhereid<10000;–select*fromTBwhereidbetween10000and20000;–......•小语句小事务好处：减少锁、用上多cpu，缓存命中率高pMySQLSQL语句规范•语句尽量简单，不在数据库做复杂运算，不用存储过程、函数•

1.数据库难于扩展，扩展能力远不如APP。•

2.大消耗性能的SQL很容易对其他SQL产生影响。•

3、MySQL优化器不足，处理复杂SQL时容易选择错误执行计划；•MySQL没有SQL级并行、HashJoin、分析函数等特性，处理复杂SQL能力不强；在高并发的系统中，复杂SQL容易产生锁问题•复杂SQL可拆分多个简单SQL•md5()/OrderbyRand()•select，insert一定要带上字段名例如，不允许select*•

1.select的数据长度可以影响orderby排序算法。•

2.增删字段对程序的影响。•

3.如果有大字段select真正需求的字段可以节省网络IO开销。pMySQLSQL语句规范•不要在索引列做运算和表达式•BAD:select*fromtableWHEREto_days(current_date)–to_days(date_col)<=10•GOOD:select*fromtableWHEREdate_col>=DATE_SUB('2011-10-22',INTERVAL10DAY);•BAD：select*fromZS_Userwheresubstr(UserNickName,1,4)=’lucy’•GOOD：selecta.UserCity,a.UserSourcefromZS_Userawherea.UserNickNamelike’lucy%’p规范总结：•性能保障：合理的表结构设计+必要的索引+简洁小语句。126!"a5实践案例介绍1数据库综述2数据库使用目录CONTENTS世界触手可及4自研分布式数据库3数据库设计127!"#$#3RQST!*#$UVWXM$YZ[\W]^!"•快速部署高可用数据库架构，•应对日益增长和变化的业务，通过快速部署实现客户需求•当业务增加或者降低时，可以灵活的扩展资源与降低配置，从而降低客户使用成本部署实践连接使用实践130!"#$#3RQST!*#$UVWXM$YZ[\W]^!"日志分析实践性能分析实践性能优化实践•参数与索引优化能明显提升运行速度•支持策略备份：使用图形化界面，通过简单的设置备份周期，就可以实现数据库自动备份，备份与恢复•秒级粒度恢复：一旦发生故障，或认为误删数据，通过备份数据实现秒级数据恢复备份与恢复•秒级粒度恢复：一旦发生故障，或认为误删数据，通过备份数据实现秒级数据恢复备份与恢复感谢聆听！

